/****************************************************************************
** Meta object code from reading C++ file 'tst_qjsonrpcservice.cpp'
**
** Created:
**      by: The Qt Meta Object Compiler version 63 (Qt 4.8.4)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qjsonrpcservice.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.4. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_TestQJsonRpcService[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: signature, parameters, type, tag, flags
      21,   20,   20,   20, 0x08,
      36,   20,   20,   20, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_TestQJsonRpcService[] = {
    "TestQJsonRpcService\0\0testDispatch()\0"
    "testSignals()\0"
};

void TestQJsonRpcService::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        TestQJsonRpcService *_t = static_cast<TestQJsonRpcService *>(_o);
        switch (_id) {
        case 0: _t->testDispatch(); break;
        case 1: _t->testSignals(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObjectExtraData TestQJsonRpcService::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject TestQJsonRpcService::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQJsonRpcService,
      qt_meta_data_TestQJsonRpcService, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &TestQJsonRpcService::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *TestQJsonRpcService::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *TestQJsonRpcService::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_TestQJsonRpcService))
        return static_cast<void*>(const_cast< TestQJsonRpcService*>(this));
    return QObject::qt_metacast(_clname);
}

int TestQJsonRpcService::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    }
    return _id;
}
static const uint qt_meta_data_TestService[] = {

 // content:
       6,       // revision
       0,       // classname
       1,   14, // classinfo
       3,   16, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       2,       // signalCount

 // classinfo: key, value
      20,   12,

 // signals: signature, parameters, type, tag, flags
      33,   32,   32,   32, 0x05,
      52,   46,   32,   32, 0x05,

 // slots: signature, parameters, type, tag, flags
     100,   93,   85,   32, 0x0a,

       0        // eod
};

static const char qt_meta_stringdata_TestService[] = {
    "TestService\0service\0serviceName\0\0"
    "testSignal()\0param\0testSignalWithParameter(QString)\0"
    "QString\0string\0testMethod(QString)\0"
};

void TestService::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        TestService *_t = static_cast<TestService *>(_o);
        switch (_id) {
        case 0: _t->testSignal(); break;
        case 1: _t->testSignalWithParameter((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 2: { QString _r = _t->testMethod((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObjectExtraData TestService::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject TestService::staticMetaObject = {
    { &QJsonRpcService::staticMetaObject, qt_meta_stringdata_TestService,
      qt_meta_data_TestService, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &TestService::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *TestService::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *TestService::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_TestService))
        return static_cast<void*>(const_cast< TestService*>(this));
    return QJsonRpcService::qt_metacast(_clname);
}

int TestService::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QJsonRpcService::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 3)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 3;
    }
    return _id;
}

// SIGNAL 0
void TestService::testSignal()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}

// SIGNAL 1
void TestService::testSignalWithParameter(const QString & _t1)
{
    void *_a[] = { 0, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}
QT_END_MOC_NAMESPACE
